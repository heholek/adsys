name: Update admx and adml templates
on:
  push:

env:
  goversion: '1.15'

jobs:
  build-admxgen:
    name: Build admxgen static binary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.goversion }}
      - run: |
          mkdir /tmp/adsys
          CO_ENABLED=0 go build ./internal/policies/ad/admxgen/
      - name: Upload admxgen
        uses: actions/upload-artifact@v2
        with:
          name: admxgen
          path: |
            admxgen
            ./internal/policies/ad/admxgen/defs/*
          if-no-files-found: error

  collect-releases:
    name: Collect supported keys on each releases
    runs-on: ubuntu-latest
    needs: build-admxgen
    strategy:
      matrix:
        releases: ['ubuntu:devel', 'ubuntu:latest']
    container:
      image: ${{ matrix.releases }}
    steps:
      - name: Download admxgen and definition files
        uses: actions/download-artifact@v2
        with:
          name: admxgen
      - name: Install desktop with all default package in container
        run: |
          DEBIAN_FRONTEND=noninteractive apt update
          DEBIAN_FRONTEND=noninteractive apt -y install ubuntu-desktop
      - name: Collect support keys
        run: |
          chmod 755 ./admxgen
          ./admxgen -current-session ubuntu expand ./internal/policies/ad/admxgen/defs/ ./out/
      - name: Prepare artefact name variable
        shell: bash
        run: |
          artifacts_name=${{ matrix.releases }}
          artifacts_name=${artifacts_name/:/-}
          echo "artifacts_name=${artifacts_name}" >> $GITHUB_ENV
      - name: Generated definition files
        uses: actions/upload-artifact@v2
        with:
          name: policies-${{ env.artifacts_name }}
          path: out/*
          if-no-files-found: error

  generate-ad:
    name: Collect and merge keys to generated admx/adml
    runs-on: ubuntu-latest
    needs: collect-releases
    steps:
      - name: Download all available artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Display structure of downloaded files
        run: |
          mkdir all/
          for f in $(find artifacts/policies-*/ -type f); do
            cp $f all/
          done
          chmod +x artifacts/admxgen/admxgen
          artifacts/admxgen/admxgen admx artifacts/admxgen/internal/policies/ad/admxgen/defs/categories.yaml all/ .
          ls -R